name: Deploy App Windows

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: self-hosted

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Pull image from GHCR
      shell: powershell
      run: |
        $repo = "${{ github.repository }}".ToLower()
        $imageName = "ghcr.io/$repo/api:dev"
        Write-Host "Pulling image: $imageName"
        docker pull $imageName

    - name: Create .env file from GitHub Variable
      shell: powershell
      run: |
        $envContent = "${{ vars.ENV_FILE }}"
        if ([string]::IsNullOrEmpty($envContent)) {
          Write-Host "Error: ENV_FILE variable is empty!"
          exit 1
        }
        Set-Content -Path .env -Value $envContent
        Write-Host "Generated .env with content length: $($envContent.Length)"

    - name: Setup Firebase Credentials
      shell: powershell
      run: |
        # Crear directorio Infrastructure dentro de Backend
        $backendPath = "$env:GITHUB_WORKSPACE/Backend"
        $infraPath = "$backendPath/Infrastructure"
        
        New-Item -ItemType Directory -Path $infraPath -Force
        
        # Guardar el archivo en la ubicación correcta
        $firebasePath = "$infraPath/umandaditos_firebase.json"
        [System.IO.File]::WriteAllBytes(
          $firebasePath,
          [System.Convert]::FromBase64String("${{ secrets.FIREBASE_CREDENTIALS_BASE64 }}")
        )
    
        # Verificaciones exhaustivas
        Write-Host "Ubicación del archivo: $firebasePath"
        Write-Host "Tamaño del archivo: $((Get-Item $firebasePath).Length) bytes"
        Write-Host "Primeras líneas: $(Get-Content $firebasePath -Head 3)"

    - name: Run container
      shell: powershell
      run: |
        $repo = "${{ github.repository }}".ToLower()
        $imageName = "ghcr.io/$repo/api:dev"
        docker ps -a -q -f name=api_container | ForEach-Object { docker rm -f $_ }
        Write-Host "Running container from image: $imageName"
        docker run `
          --env-file .env `
          -e FIREBASE_CREDENTIAL_PATH="/app/Infrastructure/umandaditos_firebase.json" `
          -v "$env:GITHUB_WORKSPACE/Backend/Infrastructure:/app/Infrastructure" `
          -d -p 9090:8080 `
          --name api_container `
          $imageName

